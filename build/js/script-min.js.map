{"version":3,"sources":["../../assets/js/util/bootstrap.js","../../assets/js/animation/paralax.js","../../assets/js/util/camelCase.js","../../assets/js/routes/common.js","../../assets/js/script.js","../../assets/js/util/router.js"],"names":["window","$","jQuery","require$$0","stars","document","getElementById","addEventListener","value","scrollY","style","left","camelCase","str","charAt","toLowerCase","replace","split","map","part","toUpperCase","slice","join","common","[object Object]","menuButton","siteNav","on","toggleClass","onkeydown","event","keyCode","removeClass","find","each","this","e","preventDefault","parent","routes","route","arg","fire","body","className","forEach","ready","loadEvents"],"mappings":"kHAAAA,OAAOC,EAAID,OAAOE,OAASC,EAAAA,QCA3B,IAAIC,EAAQC,SAASC,eAAe,SAMpCN,OAAOO,iBAAiB,UAAU,WAChC,IAAIC,EAAQR,OAAOS,QACnBL,EAAMM,MAAMC,KAAe,IAARH,EAAe,QCHpC,IAAAI,EAAeC,GAAO,GAAGA,EAAIC,OAAO,GAAGC,gBAAgBF,EAAIG,QAAQ,SAAU,KAAKC,MAAM,KACrFC,KAAIC,GAAQ,GAAGA,EAAKL,OAAO,GAAGM,gBAAgBD,EAAKE,MAAM,OACzDC,KAAK,IACLD,MAAM,KCRT,IAAAE,EAAe,CACbC,OAGE,MAAMC,EAAaxB,EAAE,gBACfyB,EAAUzB,EAAE,aAClBwB,EAAWE,GAAG,SAAS,WACrBD,EAAQE,YAAY,eAItBvB,SAASwB,UAAY,SAASC,GAEP,KADrBA,EAAQA,GAAS9B,OAAO8B,OACdC,SACRL,EAAQM,YAAY,aAKxBN,EAAQO,KAAK,oCAAoCC,MAAK,WACpDjC,EAAEkC,MAAMR,GAAG,SAAS,SAASS,GAC3BA,EAAEC,iBACFpC,EAAEkC,MAAMG,OAAO,2BAA2BV,YAAY,wBAM5DJ,cCvBF,MAAMe,EAAS,ICKf,MAMEf,YAAYe,GACVJ,KAAKI,OAASA,EAShBf,KAAKgB,EAAOV,EAAQ,OAAQW,GACH,KAAVD,GAAgBL,KAAKI,OAAOC,IAA+C,mBAA9BL,KAAKI,OAAOC,GAAOV,IAE3EK,KAAKI,OAAOC,GAAOV,GAAOW,GAa9BjB,aAEEW,KAAKO,KAAK,UAGVrC,SAASsC,KAAKC,UACX7B,cACAC,QAAQ,KAAM,KACdC,MAAM,OACNC,IAAIN,GACJiC,SAASD,IACRT,KAAKO,KAAKE,GACVT,KAAKO,KAAKE,EAAW,eAIzBT,KAAKO,KAAK,SAAU,cDrDE,CACxBnB,OAAAA,IAGFrB,OAAOG,UAAUyC,OAAM,IAAMP,EAAOQ","sourcesContent":["window.$ = window.jQuery = require('jquery');\n","let stars = document.getElementById('stars');\n// let moon = document.getElementById('moon');\n// let mountainsBehind = document.getElementById('mountains-behind');\n// let mountainsFront = document.getElementById('mountains-front');\n// let content = document.getElementById('content');\n\nwindow.addEventListener('scroll', function(){\n  let value = window.scrollY;\n  stars.style.left = value * 0.25 + 'px';\n  // moon.style.top = value * 1.05 + 'px';\n  // mountainsBehind.style.top = value * 0.5 + 'px';\n  // mountainsFront.style.top = value * 0.6 + 'px';\n  // content.style.top = value * 0.25 + 'px';\n})\n","/**\n * the most terrible camelizer on the internet, guaranteed!\n * @param {string} str String that isn't camel-case, e.g., CAMeL_CaSEiS-harD\n * @return {string} String converted to camel-case, e.g., camelCaseIsHard\n */\nexport default str => `${str.charAt(0).toLowerCase()}${str.replace(/[\\W_]/g, '|').split('|')\n  .map(part => `${part.charAt(0).toUpperCase()}${part.slice(1)}`)\n  .join('')\n  .slice(1)}`;\n","export default {\n  init() {\n\n    // Menu Button\n    const menuButton = $('.menu-button'),\n          siteNav = $('.site-nav');\n    menuButton.on('click', function () {\n      siteNav.toggleClass('revealed');\n    });\n\n    // Accessibility\n    document.onkeydown = function(event) {\n      event = event || window.event;\n      if (event.keyCode == 27 ) {\n        siteNav.removeClass('revealed');\n      }\n    };\n\n    // Sub-menu\n    siteNav.find('.menu-item-has-children > button').each(function () {\n      $(this).on('click', function(e) {\n        e.preventDefault();\n        $(this).parent('.menu-item-has-children').toggleClass('sub-menu-open');\n      });\n    });\n\n  },\n\n  finalize() {\n\n  }\n}\n","import './util/bootstrap';\nimport './animation/paralax';\nimport Router from './util/router';\nimport common from './routes/common';\n\nconst routes = new Router({\n  common\n});\n\njQuery(document).ready(() => routes.loadEvents());\n","import camelCase from './camelCase';\n\n/**\n * DOM-based Routing\n *\n * Based on {@link http://goo.gl/EUTi53|Markup-based Unobtrusive Comprehensive DOM-ready Execution} by Paul Irish\n *\n * The routing fires all common scripts, followed by the page specific scripts.\n * Add additional events for more control over timing e.g. a finalize event\n */\nclass Router {\n\n  /**\n   * Create a new Router\n   * @param {Object} routes\n   */\n  constructor(routes) {\n    this.routes = routes;\n  }\n\n  /**\n   * Fire Router events\n   * @param {string} route DOM-based route derived from body classes (`<body class=\"...\">`)\n   * @param {string} [event] Events on the route. By default, `init` and `finalize` events are called.\n   * @param {string} [arg] Any custom argument to be passed to the event.\n   */\n  fire(route, event = 'init', arg) {\n    const fire = route !== '' && this.routes[route] && typeof this.routes[route][event] === 'function';\n    if (fire) {\n      this.routes[route][event](arg);\n    }\n  }\n\n  /**\n   * Automatically load and fire Router events\n   *\n   * Events are fired in the following order:\n   *  * common init\n   *  * page-specific init\n   *  * page-specific finalize\n   *  * common finalize\n   */\n  loadEvents() {\n    // Fire common init JS\n    this.fire('common');\n\n    // Fire page-specific init JS, and then finalize JS\n    document.body.className\n      .toLowerCase()\n      .replace(/-/g, '_')\n      .split(/\\s+/)\n      .map(camelCase)\n      .forEach((className) => {\n        this.fire(className);\n        this.fire(className, 'finalize');\n      });\n\n    // Fire common finalize JS\n    this.fire('common', 'finalize');\n  }\n}\n\nexport default Router\n"]}